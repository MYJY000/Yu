#include<bits/stdc++.h>
#define ll long long

using namespace std;

ll prime[10]={2,3,5,7,11,13,17,19,61,24251};
ll pn[100];
ll len;

ll qmul(ll a,ll b,ll mod)
{
    ll ans=0;
    while(b)
    {
        if(b&1)
            ans=(ans+a)%mod;
        a=(a+a)%mod;
        b>>=1;
    }
    return ans;
}

ll qpow(ll a,ll b,ll mod)
{
    ll ans=1;
    while(b)
    {
        if(b&1)
            ans=qmul(ans,a,mod)%mod;
        a=qmul(a,a,mod)%mod;
        b>>=1;
    }
    return ans;
}

ll gcd(ll a,ll b)
{
    if(a==0)
        return 1;
    else
        return b?gcd(b,a%b):a;
}

bool MR(ll n)
{
    if(n==0 || n==1 || (n%2==0 && n>2))
        return false;
    for(int i=0;i<10;i++)
    {
        if(prime[i]==n)
            return true;
    }
    ll d=n-1;
    ll s=0;
    while(!(d&1))
    {
        s++;
        d>>=1;
    }
    for(int i=0;i<20;i++)
    {
        ll a;
        if(i>=10)
            a=rand()%(n-2)+2;
        else
            a=prime[i];
        ll x=qpow(a,d,n);
        ll y;
        for(int j=0;j<s;j++)
        {
            y=qmul(x,x,n);
            if(y==1 && x!=1 && x!=n-1)
                return false;
            x=y;
        }
        if(y!=1)
            return false;
    }
    return true;
}

ll rho(ll n,ll c)
{
    ll d,i=1,k=2;
    ll x=rand()%(n-2)+2;
    ll y=x;
    while(1)
    {
        i++;
        x=(qmul(x,x,n)+c)%n;
        d=gcd(abs(y-x),n);
        if(d<n && d>1)
        {
            return d;
        }
        if(y==x)
            return n;
        if(i==k)
        {
            y=x;
            k<<=1;
        }
    }
}

void fact(ll n,ll c)
{
    if(n==1)
        return;
    if(MR(n))
    {
        pn[++len]=n;
        return;
    }
    ll p=n,k=c;
    while(p>=n)
        p=rho(p,c--);
    fact(p,k);
    fact(n/p,k);
}
